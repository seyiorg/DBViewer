/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dwp.dbviewer;

import net.proteanit.sql.DbUtils;

import javax.swing.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

/**
 *
 * @author OOGUNDIP
 */
public class Viewer extends javax.swing.JFrame {

    private DBConnection dbc = new DBConnection();
    private ResultSet rs;
    private PreparedStatement ps;
    /**
     * Creates new form Viewer
     */
    public Viewer() throws SQLException {
        initComponents();
        dbList(dbc.dBConnectivitiy());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        headerPanel = new javax.swing.JPanel();
        headerLabel = new javax.swing.JLabel();
        bodyPanel = new javax.swing.JPanel();
        selectDBLbl = new javax.swing.JLabel();
        selectTableLbl = new javax.swing.JLabel();
        dbDropDown = new javax.swing.JComboBox<>();
        tableDropDown = new javax.swing.JComboBox<>();
        viewTblBtn = new javax.swing.JButton();
        ResultPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        headerPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        headerPanel.setLayout(new java.awt.GridBagLayout());

        headerLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        headerLabel.setText("DB Viewer Test Tool");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 27;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 182, 12, 168);
        headerPanel.add(headerLabel, gridBagConstraints);

        bodyPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        bodyPanel.setLayout(null);

        selectDBLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        selectDBLbl.setText("Select Database:");
        bodyPanel.add(selectDBLbl);
        selectDBLbl.setBounds(203, 16, 101, 15);

        selectTableLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        selectTableLbl.setText("Select Table:");
        bodyPanel.add(selectTableLbl);
        selectTableLbl.setBounds(203, 45, 78, 15);

        dbDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select a DB" }));
        dbDropDown.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dbDropDownItemStateChanged(evt);
            }
        });
        bodyPanel.add(dbDropDown);
        dbDropDown.setBounds(341, 14, 284, 27);

        tableDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select a table" }));
        bodyPanel.add(tableDropDown);
        tableDropDown.setBounds(341, 45, 284, 27);

        viewTblBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        viewTblBtn.setText("View Table");
        viewTblBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewTblBtnActionPerformed(evt);
            }
        });
        bodyPanel.add(viewTblBtn);
        viewTblBtn.setBounds(532, 71, 105, 29);

        ResultPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        ResultPanel.setLayout(new java.awt.GridBagLayout());

        resultTable.setAutoCreateRowSorter(true);
        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(resultTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 996;
        gridBagConstraints.ipady = 486;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 11, 12, 12);
        ResultPanel.add(jScrollPane2, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
                    .addComponent(ResultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ResultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dbDropDownItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dbDropDownItemStateChanged
        // TODO add your handling code here:
        try {
            tableDropDown.removeAllItems();
            tableList(dbc.dBConnectivitiy());
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_dbDropDownItemStateChanged

    private void viewTblBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewTblBtnActionPerformed
        // TODO add your handling code here:
        try {
            populateTable(dbc.dBConnectivitiy());
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_viewTblBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Viewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Viewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Viewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Viewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Viewer().setVisible(true);
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        });
    }

    //User definied methods
    private void tableList(Connection con) {
        try {

            //select table_name from INFORMATION_SCHEMA.TABLES where table_schema= 'springboot';
            String selectDBValue = (String) dbDropDown.getSelectedItem();
            if (selectDBValue != null && !selectDBValue.equals("Select a DB")) {
                String dbToUse = "use " + selectDBValue + ";";
                ps = con.prepareStatement(dbToUse);
                rs = ps.executeQuery();

                String tblListSQL = "show tables;";
                ps = con.prepareStatement(tblListSQL);
                rs = ps.executeQuery();

                while (rs.next()) {
                    String tableName = rs.getString(1);
                    tableDropDown.addItem(tableName);
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void dbList(Connection con) {
//        ArrayList<String> ls = new ArrayList<String>();
        try {
            //select table_name from INFORMATION_SCHEMA.TABLES where table_schema= 'springboot';
            String tblListSQL = "show databases;";
            ps = con.prepareStatement(tblListSQL);
            rs = ps.executeQuery();

            while (rs.next()){
                String dbName = rs.getString(1);
//                ls.add(dbName);
                dbDropDown.addItem(dbName);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void populateTable(Connection con){
        String selectDBValue = (String) dbDropDown.getSelectedItem();
        String dbToUse = "use " + selectDBValue + ";";
        try {
            ps = con.prepareStatement(dbToUse);
            rs = ps.executeQuery();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }


        String selectTBValue = (String) tableDropDown.getSelectedItem();
        String tblViewSql = " select * from " + selectTBValue + ";";
        try {
            ps = con.prepareStatement(tblViewSql);
            rs = ps.executeQuery();
            resultTable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ResultPanel;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JComboBox<String> dbDropDown;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable resultTable;
    private javax.swing.JLabel selectDBLbl;
    private javax.swing.JLabel selectTableLbl;
    private javax.swing.JComboBox<String> tableDropDown;
    private javax.swing.JButton viewTblBtn;
    // End of variables declaration//GEN-END:variables
}
